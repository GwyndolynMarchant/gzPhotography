#library "photography_camera"
#include "zcommon.acs"

function bool compare_lang_param (str p, str s, int n) {
	return (!StrIcmp(StrParam(l:p),s,n));
}

function str figure_out_title (void) {
	// Megawads & Others
	if (compare_lang_param("QUITMSG13","\c[Gs2TextBlue]Mamma mia!",25)) return "Doom: The Golden Souls 2";
	if (CheckClass("Golden_Cacoold")) return "Doom: The Golden Souls -Remastered-";
	if (CheckClass("CyberDemon1D")) return "Linear Doom";
	if (CheckActorClass(0, "UnfamiliarPlayer")) return "Unfamiliar";
	if (compare_lang_param("HUSTR_1","E1M01: Back to Saturn X",23)) return "Back to Saturn X: Get Out Of My Stations";
	if (CheckClass("c17_wood_crate")) return "Dooming The Bar: City 17";
	if (compare_lang_param("GOTHTHBONUS","A Spirit",8)) return "Bittersweet";
	if (compare_lang_param("SKILL_NIGHTMARE","Call of Cthulhu!",16)) return "Nameless";
	if (compare_lang_param("CC_HERO","THE DOOM SLAYER",15)) return "Doom 4 Vanilla";
	if (compare_lang_param("QUITMSG","Quit DOOM 64?",12)) return "Doom 64 Retribution";

	// Standalone IWADs
	//if (CheckActorClass(0, "Simon")) return "Castlevania: Simon's Destiny";
	if (GetCVar("GAME_BLASPHEMER")) return "Blasphemer";
	if (GetCVar("GAME_URBAN")) return "Action Doom 2: Urban Brawl";
	if (GetCVar("GAME_HARMONY")) return "Harmony";
	if (GetCVar("GAME_DEL")) return "Delaweare";
	if (GetCVar("GAME_ROTWB")) return "Rise Of The Wool Ball";
	//if (compare_lang_param("QUITMSG12","If he is Dr.Tongue",16)) return "Zombies Ate My Neihgbours";

	// Heretic
	if (GetCVar("GAME_HERETIC_SHADOW")) return "Heretic: Shadow of the Serpent Riders";
	if (GetCVar("GAME_HERETIC")) return "Heretic";

	// Hexen
	if (GetCVar("GAME_HEXEN_KING")) return "Hexen: Deathkings of the Dark Citadel";
	if (GetCVar("GAME_HEXEN")) return "Hexen: Beyond Heretic";

	// Strife
	if (GetCVar("GAME_STRIFE_VETERAN")) return "Strife: Veteran Edition";
	if (GetCVar("GAME_STRIFE")) return "Strife: Quest for the Sigil";

	// Chex
	if (GetCVar("GAME_CHEX3") && compare_lang_param("HUSTR_E4M3", "E4M3: Ruins of Mukabog", 22)) return "Chex Quest速: Flemmed to the Core";
	if (GetCVar("GAME_CHEX3") && compare_lang_param("HUSTR_E4M9", "Command Hall", 12)) return "Chex Quest速: Galactic Conflict";
	if (GetCVar("GAME_CHEX3")) return "Chex速 Quest 3";
	if (GetCVar("GAME_CHEX")) return "Chex速 Quest";

	// Hacx
	if (GetCVar("GAME_HACX2")) return "Hacx 2.0";
	if (GetCVar("GAME_HACX")) return "Hacx: Twitch'n Kill";

	// Square
	if (GetCVar("GAME_SQUARE")) return "The Adventures of Square (Square-ware)";
	if (GetCVar("GAME_SQUARE2")) return "The Adventures of Square";

	// Doom Complete
	if (GetCVar("GAME_DOOM_COMPLETE")) return "DOOM: Complete: WadSmoosh";

	// Freedoom Variant
	if (GetCVar("GAME_FREEDOOM_DM")) return "FreeDM";
	if (GetCVar("GAME_FREEDOOM_PHASE2")) return "Freedoom: Phase 2";
	if (GetCVar("GAME_FREEDOOM_PHASE1")) return "Freedoom: Phase 1";
	if (GetCVar("GAME_FREEDOOM_DEMO")) return "Freedoom: Demo Version";
	if (GetCVar("GAME_FREEDOOM")) return "Freedoom";

	// Doom Variant
	if (GetCVar("GAME_DOOM_BFG")) return "Doom: BFG Edition";
	if (GetCVar("GAME_DOOM_UNITY")) return "Doom: Unity Edition";
	if (GetCVar("GAME_DOOM_XB")) return "Doom: XBox Edition";
	if (GetCVar("GAME_DOOM_ULT")) return "The Ultimate Doom";
	if (GetCVar("GAME_DOOM_REG")) return "Doom Registered";
	if (GetCVar("GAME_DOOM")) return "Doom";

	// Doom 2 Variant
	if (GetCVar("GAME_DOOM2_TNT_UNITY")) return "Final Doom: TNT - Evilution: Unity Edition";
	if (GetCVar("GAME_DOOM2_TNT")) return "Final Doom: TNT - Evilution";
	if (GetCVar("GAME_DOOM2_PLUT_UNITY")) return "Final Doom: Plutonia Experiment: Unity Edition";
	if (GetCVar("GAME_DOOM2_PLUT")) return "Final Doom: Plutonia Experiment";
	if (GetCVar("GAME_DOOM2_FR")) return "Doom 2: L'Enfer sur Terre";
	if (GetCVar("GAME_DOOM2_XB")) return "Doom 2: XBox Edition";
	if (GetCVar("GAME_DOOM2_UNITY")) return "Doom 2: Unity Edition";
	if (GetCVar("GAME_DOOM2_BFG")) return "Doom 2: BFG Edition";
	if (GetCVar("GAME_DOOM2")) return "Doom 2: Hell on Earth";

	// Generic Fallback
	return "";
}

script "photography_camera_give" ENTER {
	GiveInventory("PhotoCamera", 1);
	//SetWeapon("PhotoCamera");
	if (!GetCVar("game_name")) {
		SetCVarString("game_name", figure_out_title());
	}
}

script "photography_camera_toggle_flash" (void) {
	if (GetCVar("camera_flash")) {
		print(s:"\cdCamera flash on");
	} else {
		print(s:"\caCamera flash off");
	}
}

script "photography_camera_display" (void) {
	SetFont("BIGFONT");
	HudMessage(n:PRINTNAME_LEVELNAME;
		0, 1, CR_DARKGREEN, 0.05, 0.95, 1.5);
	if (GetCVar("camera_info_wad")) {
		SetFont("SMALLFONT");
		HudMessage(s:GetCVarString("game_name");
			0, 2, CR_DARKGREEN, 0.05, -0.95, 1.5);
	}
}